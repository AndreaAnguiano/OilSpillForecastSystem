[app:webgnome_api]
use = egg:webgnome_api

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.default_locale_name = en

pyramid.includes = cornice
                   pyramid_redis_sessions

cors_policy.origins = https://gnome.orr.noaa.gov

redis.sessions.secret = 12342C48
redis.sessions.timeout = 259200

# configured paths to server resources
install_path = %(here)s
model_data_dir = %(here)s/models
session_dir = %(here)s/models/session
locations_dir = %(here)s/location_files
save_file_dir = %(here)s/save_files
help_dir = %(here)s/help

# This configuration is used to setup a file share with the GOODS server
# The current setting is just for testing.
goods_url = https://gnome.orr.noaa.gov
goods_dir = models

can_persist_uploads = false
max_upload_size = 2500 * 1024 * 1024

[pipeline:main]
pipeline =
    gzip
    webgnome_api

[server:main]
use = egg:gevent-socketio-erd#paster
host = 0.0.0.0
port = 9899
certfile=/config/orr.noaa.gov.crt
keyfile=/config/orr.noaa.gov.key
ca_certs=/config/orr.noaa.gov.chain
ciphers=HIGH:!aNULL:!MD5
do_handshake_on_connect=True

[filter:gzip]
use = egg:Paste#gzip
compress_level = 6

# Logging Configuration

[loggers]
keys = root, webgnome_api, gnome

[handlers]
keys = console, msgs_file, gnome_file, webgnome_api_file, email

[formatters]
keys = generic, gevent

[logger_root]
level = DEBUG
handlers = console, msgs_file

[logger_webgnome_api]
level = DEBUG
handlers = webgnome_api_file
qualname = webgnome_api

[logger_gnome]
level = INFO
handlers = gnome_file
qualname = gnome

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = gevent

[handler_msgs_file]
class = handlers.RotatingFileHandler
args = (r"%(here)s/messages.log", "a", 1000000, 3)
level = NOTSET
formatter = gevent

[handler_webgnome_api_file]
class = handlers.RotatingFileHandler
args = (r"%(here)s/webgnome_api.log", "w", 1000000, 1)
level = NOTSET
formatter = generic 

[handler_gnome_file]
class = handlers.RotatingFileHandler
args = (r"%(here)s/gnome.log", "w", 1000000, 1)
level = NOTSET
formatter = generic 

[handler_email]
class = handlers.SMTPHandler
args = (('mta.nems.noaa.gov', 25), '"APPLICATION ALERT" <webgnome@hazweb2>', ['Naomi.Wilkins@noaa.gov', 'jay.hennen@noaa.gov'], 'New Critical Event From [WebGnome]')
level = ERROR
formatter = generic

[formatter_gevent]
class = webgnome_api.WebgnomeFormatter
format = %(asctime)s %(levelname)-5.5s %(session_hash)s [%(name)s] %(message)s

[formatter_generic]
class = pyramid_log.Formatter
format = %(asctime)s %(levelname)-5.5s %(request.session_hash|<no session>)s [%(name)s] %(message)s

